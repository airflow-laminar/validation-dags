# @package _global_
_target_: airflow_config.Configuration
defaults:
  - balancer@extensions.balancer
  - libraries@extensions.libraries
  - supervisor@extensions.supervisor

default_task_args:
  _target_: airflow_config.TaskArgs
  owner: laminar
  email: [dev@paine.nyc]
  email_on_failure: false
  email_on_retry: false
  retries: 0
  depends_on_past: false

default_dag_args:
  _target_: airflow_config.DagArgs
  start_date: ["2025-01-01", "America/New_York"]
  catchup: false
  max_active_runs: 1

dags:
  lam-generate-dags:
    tags: ["generate", "utility"]
    description: "Generate validation dags"
    schedule: null
  lam-clean-dags:
    tags: ["lam", "clean", "utility"]
    description: "Clean validation dags"
    schedule: "0 0 * * *"
    max_active_tasks: 1
    params: ${.tasks.clean-dags}
    tasks:
      clean-dags:
        _target_: airflow_pydantic.DagCleanTask
  lam-clean-dags-noconfig:
    tags: ["lam", "clean", "utility"]
    description: "Clean validation dags"
    schedule: "0 12 * * *"
    max_active_tasks: 1
  lam-clean-journalctl:
    tags: ["lam", "clean", "utility"]
    description: "Clean journalctl"
    schedule: "0 0 * * *"
    max_active_tasks: 1
    params: ${.tasks.clean-journalctl}
    tasks:
      clean-journalctl:
        _target_: airflow_common_operators.JournalctlCleanOperator
        sudo: true
        days: 2
  lam-clean-journalctl-noconfig:
    tags: ["lam", "clean", "utility"]
    description: "Clean journalctl"
    schedule: "0 12 * * *"
    max_active_tasks: 1


  lam-code-dags:
    tags: ["lam", "code", "utility"]
    description: "Pull dags repo"
    schedule: "10,30,50 * * * *"
    max_active_tasks: 1
    tasks:
      pull-dags:
        _target_: airflow_pydantic.BashTask
        bash_command: cd $AIRFLOW_HOME/dag_src/airflow-laminar/validation-dags && git fetch --all && git reset origin/main --hard
        queue: primary
  lam-code-dags-noconfig:
    tags: ["lam", "code", "utility"]
    description: "Pull dags repo"
    schedule: "0,20,40 * * * *"
    max_active_tasks: 1

  lam-code-libraries:
    tags: ["lam", "code", "utility"]
    description: "Clone repos"
    schedule: "30 1 * * *"
    max_active_tasks: 1
    tasks:
      pull-libraries:
        _target_: airflow_common_operators.LibraryListTask
        git: ${extensions.libraries.git}
        pip: [] # ${extensions.libraries.pip}
        parallel: true
        command_prefix: source /var/lib/venvs/airflow/bin/activate
        queue: primary

  lam-test-ha-counter:
    description: "Test HA counter"
    tags: ["lam", "test", "utility"]
    schedule: "0 0 * * *"
    tasks:
      lam-get-count:
        _target_: airflow_pydantic.PythonTask
        python_callable: validation_dags.test_ha_countdown_foo._get_count
        do_xcom_push: true
      lam-ha:
        _target_: airflow_ha.HighAvailabilityTask
        python_callable: validation_dags.test_ha_countdown_foo._keep_counting
        timeout: 30
        poke_interval: 5
        pass_trigger_kwargs: {"conf": '{"counter": {{ ti.xcom_pull(key="return_value", task_ids="lam-get-count") }} }'}
        dependencies: [lam-get-count]
  lam-test-ha-counter-noconfig:
    description: "Test HA counter"
    tags: ["lam", "test", "utility"]
    schedule: "0 12 * * *"
  lam-test-high-availability:
    description: "Test HA operator"
    tags: ["lam", "test", "utility"]
    schedule: "0 12 * * *"
    tasks:
      lam-pre:
        _target_: airflow_pydantic.PythonTask
        python_callable: validation_dags.test_ha_foo._pre
      lam-ha:
        _target_: airflow_ha.HighAvailabilityTask
        python_callable: validation_dags.test_ha_foo._choose
        runtime: 120
        maxretrigger: 2
        endtime: 23:00:00
        timeout: 1000
        poke_interval: 10
        dependencies: [lam-pre]
      lam-retrigger-fail:
        _target_: airflow_pydantic.PythonTask
        python_callable: validation_dags.test_ha_foo._pre
        dependencies: [lam-ha]
  lam-test-high-availability-noconfig:
    description: "Test HA operator"
    tags: ["lam", "test", "utility"]
    schedule: "0 12 * * *"

  lam-test-supervisor:
    description: "Test supervisor"
    tags: ["lam", "test", "utility"]
    schedule: "0 0 * * *"
    tasks:
      supervisor:
        _target_: airflow_supervisor.SupervisorSSHTask
        cfg:
          _target_: airflow_supervisor.SupervisorSSHAirflowConfiguration
          check_interval: 10
          check_timeout: 60
          cleanup: true
          command_prefix: . /var/lib/venvs/airflow/bin/activate
          endtime: 23:00:00
          maxretrigger: 5
          restart_on_initial: true
          restart_on_retrigger: false
          runtime: 360
          ssh_operator_args:
            cmd_timeout: 63
          stop_on_exit: true
          working_dir: "/data/airflow/supervisor"
          program:
            test:
              _target_: airflow_supervisor.ProgramConfiguration
              command: bash -c "sleep 3600; exit 0"
        host:
          _target_: airflow_balancer.HostQuery
          balancer: ${extensions.balancer}
          queue: primary
        port:
          _target_: airflow_balancer.PortQuery
          balancer: ${extensions.balancer}
          name: test-supervisor-port
  lam-test-supervisor-noconfig:
    description: "Test supervisor"
    tags: ["lam", "test", "utility"]
    schedule: "0 12 * * *"
  lam-dummy:
    description: "Dummy dag"
    tags: ["lam", "test", "utility"]
    schedule: "0 0 * * *"
    tasks:
      dummy-task:
        _target_: airflow_pydantic.PythonTask
        python_callable: validation_dags.dummy_foo._dummy_foo
  lam-dummy-noconfig:
    description: "Dummy dag"
    tags: ["lam", "test", "utility"]
    schedule: "0 12 * * *"

  lam-succeed-on-rerun:
    description: "Succeed on rerun"
    tags: ["lam", "P1", "test", "utility"]
    schedule: "@once"
    tasks:
      fail-on-first-run:
        _target_: airflow_pydantic.PythonTask
        python_callable: validation_dags.succeed_on_rerun_foo._fail_on_first_run
  lam-succeed-on-rerun-noconfig:
    description: "Succeed on rerun"
    tags: ["lam", "P1", "test", "utility"]
    schedule: "@once"

  lam-example-generated-dag:
    schedule: "0 0 * * *"
    tags: ["lam", "test"]
    tasks:
      task-1:
        _target_: airflow_pydantic.BashTask
        bash_command: "echo \"1\""
      task-2:
        _target_: airflow_pydantic.BashTask
        bash_command: "echo 2"
        dependencies: [task-1]
      task-3:
        _target_: airflow_pydantic.BashTask
        bash_command: "echo 3"
        dependencies: [task-1]
  lam-example-generated-dag2:
    schedule: "0 1 * * *"
    tags: ["lam", "test"]
    tasks:
      task-1:
        _target_: airflow_pydantic.BashTask
        bash_command: "echo \"1\""
      task-2:
        _target_: airflow_pydantic.BashTask
        bash_command: "echo 2"
        dependencies: [task-1]
      task-3:
        _target_: airflow_pydantic.BashTask
        bash_command: "echo 3"
        dependencies: [task-1]
